{"version":3,"sources":["./src/app/modules/shared-module/shared.service.ts","./src/environments/environment.ts","./src/app/components/search-league/search-league.component.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/search-league/search-league.service.ts","./src/app/modules/shared-module/shared.module.ts","./src/app/components/search-league/search-league.component.html","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\"\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/internal/operators/catchError';\nimport { throwError } from 'rxjs/internal/observable/throwError';\nimport { ITeam } from 'src/app/interfaces/team.interface';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n  constructor(private http: HttpClient) { }\n  optionSelected = new BehaviorSubject<string[]>([]);\n  teamSelected = new BehaviorSubject<string[]>([]);\n  error = new BehaviorSubject<string>(\"\")\n\n  teamsUrl = 'http://localhost:3000/teams'\n\n  public handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n      this.error.next(`An error occurred`)\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n      this.error.next(`Backend returned  error code `)\n\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { SearchLeagueService } from './search-league.service';\nimport { ILeague } from '../../interfaces/league.interface'\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { SharedService } from 'src/app/modules/shared-module/shared.service';\n\n@Component({\n  selector: 'app-search-league',\n  templateUrl: './search-league.component.html',\n  styleUrls: ['./search-league.component.scss']\n})\nexport class SearchLeagueComponent implements OnInit {\n  constructor(private searchLeagueService: SearchLeagueService,\n    private router: Router,\n    private sharedService: SharedService,) { }\n  myControl = new FormControl();\n  options: ILeague[] = [\n    {\n      _id: '',\n      teams: [],\n      name: '',\n      sport: ''\n    }\n  ];\n  filteredOptions: Observable<ILeague[]> | undefined\n\n  ngOnInit() {\n    this.searchLeagueService.getLeaguesList().toPromise().then(data => this.options = data)\n    this.filteredOptions = this.myControl.valueChanges\n      .pipe(\n        //startWith(''),\n        map((value: string) => this._filter(value))\n      );\n  }\n  selectOption(e: MatAutocompleteSelectedEvent) {\n    const item: ILeague = e.option.value;\n    console.log(\"option value\", item)\n    //this.searchLeagueService.getTeamsList(item.teams[0]).toPromise().then(data => console.log({ data }))\n    this.sharedService.optionSelected.next(item.teams)\n    this.router.navigate(['/results']);\n\n\n  }\n  displayFn(item: ILeague) {\n    console.log({ item })\n    return item ? item.name : ''\n  }\n  private _filter(value: string | ILeague): ILeague[] {\n    const filterValue = typeof (value) == 'string' ? value.toLowerCase() : value.name;\n    return this.options.filter(option => option.name.toLowerCase().includes(filterValue));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BehaviorSubject } from 'rxjs';\nimport { skip } from 'rxjs/internal/operators/skip';\nimport { SharedService } from './modules/shared-module/shared.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  constructor(private sharedService: SharedService, private _snackBar: MatSnackBar) { }\n  ngOnInit(): void {\n    this.sharedService.error.pipe(skip(1)).subscribe(message => {\n      this._snackBar.open(message, '', {\n        duration: 2000,\n      });\n    })\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { SearchLeagueComponent } from './components/search-league/search-league.component';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SharedModule } from './modules/shared-module/shared.module';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchLeagueComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatSnackBarModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n    MatInputModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    SharedModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\"\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/internal/operators/catchError';\nimport { throwError } from 'rxjs/internal/observable/throwError';\nimport { ILeague } from \"../../interfaces/league.interface\"\nimport { ITeam } from 'src/app/interfaces/team.interface';\nimport { SharedService } from 'src/app/modules/shared-module/shared.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchLeagueService {\n  constructor(private http: HttpClient, private sharedService: SharedService) { }\n\n  leaguesUrl = 'http://localhost:3000/leagues'\n  teamsUrl = 'http://localhost:3000/teams'\n\n  getLeaguesList(): Observable<ILeague[]> {\n    return this.http.get<ILeague[]>(this.leaguesUrl)\n      .pipe(\n        catchError((err) => this.sharedService.handleError(err))\n      );\n  }\n  getTeamsList(id: string): Observable<ITeam[]> {\n    return this.http.post<ITeam[]>(this.teamsUrl, { id })\n      .pipe(\n        catchError((err) => this.sharedService.handleError(err))\n      );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedService } from './shared.service';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n\n\n@NgModule({\n  declarations: [\n  ],\n  providers: [],\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatButtonModule,\n    MatGridListModule,\n    FlexLayoutModule\n\n\n  ],\n  exports: [CommonModule,\n    MatCardModule,\n    MatButtonModule,\n    MatGridListModule,\n    FlexLayoutModule\n  ]\n})\nexport class SharedModule { }\n","<form class=\"search-form\">\n    <mat-form-field class=\"example-full-width\">\n        <input type=\"text\" placeholder=\"search for a league\" aria-label=\"Number\" matInput [formControl]=\"myControl\"\n            [matAutocomplete]=\"auto\">\n        <mat-autocomplete #auto=\"matAutocomplete\" [displayWith]=\"displayFn\" (optionSelected)='selectOption($event)'>\n            <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n                {{option.name}}\n            </mat-option>\n        </mat-autocomplete>\n    </mat-form-field>\n    <router-outlet></router-outlet>\n</form>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SearchLeagueComponent } from './components/search-league/search-league.component';\n\nconst routes: Routes = [\n\n  {\n    path: 'results',\n    loadChildren: () => import('./modules/teams-list/teams-list.module').then(m => m.TeamsListModule)\n  },\n  {\n    path: 'teamDetails',\n    loadChildren: () => import('./modules/team-details/team-details.module').then(m => m.TeamDetailsModule),\n    pathMatch: 'full'\n\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<app-search-league>\n</app-search-league>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}